Shader "Unlit/perlinDisplacement"
{
    Properties
    {
        _MainTex ("Texture", 2D) = "white" {}
        _Displacement  ("Displacement", Range(0, 1.0)) = 0.3
    }
    SubShader
    {
        Tags { "RenderType"="Opaque" }
        LOD 100

        Pass
        {
            CGPROGRAM
            #pragma tessellate:tessDistance
            #pragma vertex vert 
            #pragma fragment frag
            #pragma target 4.6
            #include "Tessellation.cginc"
            #include "UnityCG.cginc"

            struct appdata
            {
                float4 vertex : POSITION;
                float3 normal : NORMAL;
                float2 uv : TEXCOORD0;
                float2 texcoord : TEXCOORD1;
            };

            struct v2f
            {
                float test : TEXCOORD2;
                float2 uv : TEXCOORD0;
                float4 vertex : SV_POSITION;
            };


            sampler2D _MainTex;
            float4 _MainTex_ST;
            float _Displacement;
            float _Tess;

             float4 tessDistance (appdata v0, appdata v1, appdata v2) {
                float minDist = 10.0;
                float maxDist = 25.0;
                return UnityDistanceBasedTess(v0.vertex, v1.vertex, v2.vertex, minDist, maxDist, _Tess)
            }

            v2f vert (appdata v)
            {
                v2f o;
                o.vertex = UnityObjectToClipPos(v.vertex);
                o.uv = TRANSFORM_TEX(v.uv, _MainTex);

                float4 coordinate = tex2Dlod(_MainTex, float4(v.texcoord.xy,0,0));
                float disp = coordinate.r * _Displacement; 

                o.vertex.xyz -= v.normal * disp;
                o.vertex.xyz += v.normal * _Displacement;
                // displacement to lower the footsteps
                return o;
            }

            fixed4 frag (v2f i) : SV_Target
            {
                // sample the texture
                fixed4 col = tex2D(_MainTex, i.uv);
                return col;
            }
            ENDCG
        }
    }
}
